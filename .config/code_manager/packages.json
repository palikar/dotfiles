{
    "vars" : {
        "arnaud_base" : "git@github.com:palikar",
        "github_base" : "git@github.com:"
    },

    "packages_list": {
        
        "personal" : [
            "tictacminimax",
            "mandelbrotworks",
            "advancedresoucemenaging",
            "promanager",
            "navigationcore",
            "stateconifiggui",
            "gameengine",
            "blog-hugo-files",
            "arnaud-framer",
            "vsexp",
            "dotfiles",
            "jgrapher",
            "MARS",
            "palikar.github.io",
            "pollution",
            "projector",
            "smarthomeworks",
            "smart_memory_location",
            "arffpar",
            "python-req-installer",
            "mflower"
        ],
        
        "emacs" : [
            "arnaud-framer",
            "vsexp",
            "python-req-installer"
        ],
        
        "system" : [
            "i3-gaps",
            "mons",
            "pamixer",
            "ranger",
            "networkmanager-dmenu",
            "xkblayout-state",
            "rxvt-unicode",
            "urxvt-perls",
            "opencv",
            "easyloggingpp",
            "emacs",
            "pywal"
        ],
        
        "misc" : [
            "opencv-contrib",
            "scull",
            "edward",
            "facebook-chat-api",
            "fbash",
            "speech_recognition",
            "prelude",
            "easyloggingpp",
            "emacs-neotree",
            "googletest",
            "crow",
            "rewire",
            "pip-requirements",
            "voidrice",
            "google-speech-v2-api",
            "instagram-web-api",
            "tensorflow",
            "keras",
            "linux-4.19",
            "ov.el",
            "cask",
            "company-smart-elisp",
            "all-the-icons",
            "pystache",
            "vue-mode",
            "mlpack",
	    "armadillo",
            "navigationfx",
            "jwtxx"
        ]
        
    },
    
    "debian_packages": {

        "system" : [
	    "libboost-all-dev",
	    "build-essential",
	    "git",
	    "cmake",
	    "cmake-curses-gui",
	    "krb5-config",
	    "krb5-user",
	    "libfile-homedir-perl",
	    "libpath-class-perl",					
	    "libswitch-perl",
	    "virtualenv",
	    "htop",
	    "gitk",
	    "ssh",
	    "ntp",
	    "ntpdate",
	    "ntpstat",
	    "sudo",
	    "net-tools",
	    "inetutils-ping",
	    "curl",
	    "wget",
	    "libglew-dev",
	    "libxt-dev",
	    "libgtk-3-dev"],

        "application": [
	    "feh",
	    "i3blocks",
	    "i3lock",
	    "dmunu",
	    "rofi",
	    "ibus",
	    "libgtk2.0-dev",
	    "youtube-dl"]
    },	

    "packages": {
        
        "arnaud-framer": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/arnaud-framer.git"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "vsexp": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/arnaud-sexp"
            },
            "install": "emacs",
            "el_files" : ["vsexp.el"]            
        },
        
        
        "dotfiles": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/dotfiles"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "emacs-neotree": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/jaypei/emacs-neotree/"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "jgrapher": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/jgrapher.git"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "MARS": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/BodenUnits/MARS"
            },
            "install": "command",
            "command": "make -j4",
            "reinstall_command": "make -j4"
        },
        
        "palikar.github.io": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/blog_hugo_files.git"
            },
            "install": "command",
            "command": "hugo",
            "reinstall_command": "hugo"
        },
        
        "pollution": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/PollutionDev"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "projector": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/projector.git"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "smarthomeworks": {
            "fetch": "git",
            "git":{
                "url" : "https://github.com/palikar/HomeworksSmart"
            },
            "install": "command",
            "command": "webpack --progress",
            "reinstall_command": "webpack --progress"
        },
        
        "smart_memory_location": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/smart_memory_location.git"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "urxvt-perls": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/muennich/urxvt-perls"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "blog-hugo-files": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/blog-hugo-files"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "navigationfx": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/NavigationFX"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "gameengine": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/GameEngine"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "advancedresoucemenaging": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/AdvancedResouceMenaging"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "arffpar": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/ArffPar"
            },
            "install": ["cmake", "command", "make"],
            "make_args" : "-j4",
            "make_extra_targets": [],
            "command" : "echo 'this is sick'"

        },
        
        "tictacminimax": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/TicTacMiniMax"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "stateconifiggui": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/StateConifigGUI"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "promanager": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/ProManager"
            },
            "install": "command",
            "command": "webpack --progress",
            "reinstall_command": "webpack --progress"
        },
        
        "mandelbrotworks": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/MandelbrotWorks"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "navigationcore": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/NavigationCore"
            },
            "install": "command",
            "command": "echo 'No install command'",
            "reinstall_command": "echo 'No install command'"
        },
        
        "i3-gaps": {
            "fetch": "git",
            "git":{
                "url" :  "https://www.github.com/Airblader/i3"
            },
            "install": "script",
            "script": "install_i3gaps.sh",
            "script_args": "",
            "dependencies": [],
            "deb_packages": ["libxcb1-dev", "libxcb-keysyms1-dev", "libpango1.0-dev",
                             "libxcb-util0-dev", "libxcb-icccm4-dev", "libyajl-dev",
                             "libstartup-notification0-dev", "libxcb-randr0-dev",
                             "libev-dev libxcb-cursor-dev", "libxcb-xinerama0-dev", 
                             "libxcb-xkb-dev", "libxkbcommon-dev" ,"libxkbcommon-x11-dev", "autoconf", "libxcb-xrm-dev"]
        },
        
        "mons": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/Ventto/mons.git"
            },
            "install": "command",
            "command": "sudo make install",
            "reinstall_command": "sudo make install",
            "deb_packages": ["xorg-xrandr"]
        },
        
        "pamixer": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/cdemoulins/pamixer.git"
            },
            "install": "command",
            "command": "make && sudo make install",
            "reinstall_command": "sudo make",
            "deb_packages": ["libpulse"]
        },
        
        "ranger": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/ranger/ranger"
            },
            "install": "command",
            "command": "sudo python setup.py install --optimize=1 --record=install_log.txt",
            "reinstall_command": "sudo python setup.py install --optimize=1 --record=install_log.txt",
            "deb_packages": ["file", "sudo", "w3m", "caca-utils",
                             "pygmentize","atool","lynx","mediainfo",
                             "odt2txt"]
        },
        
        "networkmanager-dmenu": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/firecat53/networkmanager-dmenu"
            },
            "install": "command",
            "command": "echo 'No installation' ",
            "reinstall_command": "echo 'No installation' "
        },
        
        "xkblayout-state": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/nonpop/xkblayout-state"
            },
            "install": "command",
            "command": "make && sudo make install",
            "reinstall_command": "make clean && make && sudo make install"
        },
        
        "rxvt-unicode": {
            "fetch" : "curl",
            "curl":{
                "url" :  "http://dist.schmorp.de/rxvt-unicode/Attic/rxvt-unicode-9.22.tar.bz2"
            },
            "extract" : true,
            "install": "script",
            "script": "install_rxvt-unicode.sh",
            "script_args": "-p /usr"
        },
        
        "opencv": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/opencv/opencv"
            },
            "tag": "3.2.0",
            "install": "cmake",
            "cmake_args": "-DCMAKE_OPENCV_ENABLE_NONFREE=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=OFF -DWITH_CUDA=OFF -DBUILD_CUDA_STUBS=OFF -DWITH_OPENMP=ON -DWITH_QT=OFF -DWITH_VTK=ON  -DOPENCV_EXTRA_MODULES_PATH='~/core.d/code/opencv-contrib/modules -DBUILD_TIFF=ON -DBUILD_JASPER=ON -DWITH_V4L=OFF -DBUILD_opencv_aruco=ON -DBUILD_opencv_sfm=OFF -DBUILD_opencv_dnn=OFF -DBUILD_opencv_cnn_3dobj=OFF'",
            "make_args": "-j4",
            "dependencies": ["opencv-contrib"],
            "deb_packages": ["gcc","cmake","pkg-config", "libgtk2.0-dev", "ffmpeg",
                             "libtbb-dev","libdc1394",
                             "libjpeg-dev", "libpng-dev", "libtiff-dev", "libjasper-dev",
                             "libdc1394-22-dev"]
        },
        
        "opencv-contrib": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/opencv/opencv_contrib"
            },
            "commit": "tags/3.2.0",
            "install": "command",
            "command": "echo 'No command'",
            "reinstall_command": "echo 'No command'"
        },
        
        "easyloggingpp": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/muflihun/easyloggingpp"
            },
            "install": "cmake",
            "cmake_args": "",
            "make_args": "-j2"
        },
        
        "scull": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/starpos/scull"
            },
            "install": "command",
            "command": "echo 'No installation' ",
            "reinstall_command": "echo 'No installation' "
        },
        
        "edward": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/blei-lab/edward"
            },
            "install": "command",
            "command": "echo 'No installation' ",
            "reinstall_command": "echo 'No installation' "
        },
        
        "facebook-chat-api": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/Schmavery/facebook-chat-api"
            },
            "install": "command",
            "command": "npm install",
            "reinstall_command": "echo 'No installation' "
        },
        
        "fbash": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/avikj/fbash"
            },
            "install": "command",
            "command": "npm install",
            "reinstall_command": "echo 'No installation' "
        },
        
        "speech_recognition": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/Uberi/speech_recognition"
            },
            "install": "command",
            "command": "python setup.py install",
            "reinstall_command": "python setup.py install"
        },
        
        "jwtxx": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/madf/jwtxx"
            },
            "install": "cmake",
            "cmake_args": "-DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-fPIC",
            "make_args": "-j2",
            "deb_packages": ["libjansson-dev", "openssl", "libssl-dev"]
        },
        
        "prelude": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/bbatsov/prelude"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No reinstall'",
            "deb_packages": []
        },
        
        "emacs": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/emacs-mirror/emacs"
            },
            "install": "script",
            "script": "install_emacs.sh",
            "deb_packages": ["build-essential","libm17n-dev",
                             "libmagickcore-dev","emacs",
                             "libgtk-3-dev", "libwebkitgtk-3.0-dev",
                             "libxml2-dev"]
        },
        
        "googletest": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/google/googletest"
            },
            "install": "cmake",
            "cmake_args": "-DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-fPIC",
            "make_args": "-j2",
            "deb_packages": []
        },
        
        "crow": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/ipkn/crow"
            },
            "install": "cmake",
            "cmake_args": "-DCMAKE_BUILD_TYPE=Release",
            "make_args": "-j2",
            "deb_packages": []
        },
        
        "pywal": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/dylanaraps/pywal"
            },
            "install": "setup.py",
            "setup_args": "--verbose"
        },
        
        "rewire": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/jhnns/rewire"
            },
            "install": "command",
            "command": "npm install -g rewire",
            "reinstall_command": "npm install -g rewire"
        },
        
        "pip-requirements": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/Wilfred/pip-requirements.el"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "voidrice": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/voidrice"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "google-speech-v2-api": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/gillesdemey/google-speech-v2"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "instagram-web-api": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/jlobos/instagram-web-api"
            },
            "install": "command",
            "command": "npm install",
            "reinstall_command": "echo 'No install'"
        },
        
        "tensorflow": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/tensorflow/tensorflow"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "keras": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/keras-team/keras"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "linux-4.19": {
            "fetch": "curl",
            "curl":{
                "url" :  "https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.19.tar.xz"
            },
            "install": "script",
            "script_args": ""
        },
        
        "python-req-installer": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/palikar/python-requirements-installer"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "ov.el": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/ShingoFukuyama/ov.el/"
            },
            "install": "command",
            "command": "echo 'No install'",
            "reinstall_command": "echo 'No install'"
        },
        
        "cask": {
            "fetch" : "curl",
            "curl":{
                "url" :  "https://raw.githubusercontent.com/cask/cask/master/go"
            },
            "install": "command",
            "command": "python go",
            "reinstall_command": "python go"
        },
        
        "company-smart-elisp": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/Wilfred/company-smart-elisp"
            },
            "install": "emacs",
            "el_files": ["company-smart-elisp.el"]
        },
        
        "all-the-icons": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/domtronn/all-the-icons.el"
            },
            "install": "emacs",
            "el_files": ["all-the-icons.el", "all-the-icons-faces.el"]
        },
        
        "pystache": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/defunkt/pystache"
            },
            "install": "setup.py",
            "setup_args": "--verbose --user"
        },
        
        "vue-mode": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/AdamNiederer/vue-mode"
            },
            "install": "emacs",
            "el_files": ["vue-mode.el"]
        },
        
        "mlpack": {
            "fetch": "git",
            "git":{
                "url" :  "https://github.com/mlpack/mlpack"
            },
            "install": "cmake",
            "cmake_args": "",
            "make_args": "-j3"
        },
        
	"armadillo": {
            "fetch": "git",
            "git":{
                "url" :  "https://gitlab.com/conradsnicta/armadillo-code"
            },
            "install": "cmake",
            "cmake_args": "",
            "make_args": "-j3"
	},
        
        "mflower": {
            "fetch": "git",
            "git":{
                "url" :  "@arnaud_base/mflower"
            },
            "install": "cmake",
            "cmake_args": "",
            "make_args": "-j3"
	}
        
    }
}
